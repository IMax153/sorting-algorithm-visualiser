{"version":3,"sources":["components/CssReset/index.ts","algorithms/swap.ts","algorithms/bubbleSort.ts","algorithms/insertionSort.ts","algorithms/quickSort.ts","algorithms/selectionSort.ts","algorithms/shellSort.ts","algorithms/index.ts","utils/getRandomNumbers.ts","components/SortingProvider/index.tsx","utils/delay.ts","components/InputSlider/styles.ts","components/InputSlider/index.tsx","components/Sidebar/styles.ts","components/Sidebar/index.tsx","components/Select/styles.ts","components/Select/index.tsx","components/Button/index.ts","components/SortingToolbar/styles.ts","components/SortingToolbar/index.tsx","components/SortingVisualiser/styles.ts","components/SortingVisualiser/index.tsx","index.tsx"],"names":["CssReset","createGlobalStyle","join","swap","array","x","y","temp","bubbleSort","clone","sortHistory","i","length","j","push","map","value","index","selected","comparator","insertionSort","quickSortInternal","startIndex","endIndex","pivot","Math","floor","low","high","partition","quickSort","selectionSort","min","insertionSortInterleaved","gap","shellSort","ALGORITHM","BUBBLE_SORT","INSERTION_SORT","QUICK_SORT","SELECTION_SORT","SHELL_SORT","getRandomNumbers","Array","from","max","random","SortingContext","createContext","useSortingContext","useContext","SortingProvider","children","useState","sortingAlgorithm","setSortingAlgorithm","arraySize","setArraySize","sortSpeed","setSortSpeed","setSortHistory","sortHistoryIndex","setSortHistoryIndex","sorted","setSorted","isSorting","setIsSorting","start","useCallback","history","algorithm","getAlgorithm","slice","fn","delay","forEach","histories","setTimeout","pause","timeoutId","clearTimeout","shuffle","setAlgorithm","setSize","size","setSpeed","speed","Provider","StyledInputSlider","styled","div","StyledInputSliderContainer","StyledInputSliderLabel","label","StyledInputSliderValue","p","StyledInputSliderInput","input","InputSlider","id","onChange","htmlFor","type","event","target","parsedValue","parseInt","StyledSidebar","open","Sidebar","StyledSelect","select","StyledSelectContainer","StyledSelectLabel","Select","Button","button","StyledSortingToolbar","StyledSortingToolbarCenter","StyledSortingToolbarLeft","StyledSortingToolbarRight","StyledSortingToolbarTitle","h1","SortingToolbar","sidebarOpen","toggleSidebar","onClick","StyledSortingVisualiser","StyledSortingContainer","StyledBar","height","SortingVisualiser","setSidebarOpen","handleToggleSidebar","Object","values","key","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.f7f28a95.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const CssReset = createGlobalStyle`\n  /* http://meyerweb.com/eric/tools/css/reset/\n    v2.0 | 20110126\n    License: none (public domain)\n  */\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    font-size: 100%;\n    font-family: ${[\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(',')};\n    color: #252a31;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  input[type=range] {\n    -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n    width: 100%; /* Specific width is required for Firefox. */\n    background: transparent; /* Otherwise white in Chrome */\n  }\n  input[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n  }\n  input[type=range]:focus {\n    outline: none; /* Removes the blue border. You should probably do some kind of focus styling for accessibility reasons though. */\n  }\n  input[type=range]::-ms-track {\n    width: 100%;\n    cursor: pointer;\n\n    /* Hides the slider so custom styles can be added */\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n  }\n`;\n","export const swap = (array: number[], x: number, y: number) => {\n  const temp = array[x];\n  array[x] = array[y];\n  array[y] = temp;\n};\n","import { SortHistory } from './index';\nimport { swap } from './swap';\n\nexport const bubbleSort = (array: number[]): SortHistory[][] => {\n  const clone = [...array];\n  const sortHistory: SortHistory[][] = [];\n\n  for (let i = 0; i < clone.length - 1; i++) {\n    for (let j = 0; j < clone.length - i - 1; j++) {\n      sortHistory.push(\n        clone.map((value, index) => ({\n          value,\n          selected: index === j,\n          comparator: index === j + 1\n        }))\n      );\n\n      if (clone[j] > clone[j + 1]) {\n        swap(clone, j, j + 1);\n      }\n    }\n  }\n\n  clone.map(value => ({\n    value,\n    selected: false,\n    comparator: false\n  }));\n\n  return sortHistory;\n};\n","import { SortHistory } from './index';\nimport { swap } from './swap';\n\nexport const insertionSort = (array: number[]): SortHistory[][] => {\n  const clone = [...array];\n  const sortHistory: SortHistory[][] = [];\n\n  for (let i = 0; i < clone.length; i++) {\n    let j = i;\n\n    while (j > 0 && clone[j] < clone[j - 1]) {\n      sortHistory.push(\n        /* eslint-disable-next-line no-loop-func */\n        clone.map((value, index) => ({\n          value,\n          selected: index === j,\n          comparator: index === j - 1\n        }))\n      );\n\n      swap(clone, j, j - 1);\n      j--;\n    }\n  }\n\n  sortHistory.push(\n    clone.map((value, index) => ({\n      value,\n      selected: false,\n      comparator: false\n    }))\n  );\n\n  return sortHistory;\n};\n","import { SortHistory } from './index';\nimport { swap } from './swap';\n\nconst partition = (\n  array: number[],\n  sortHistory: SortHistory[][],\n  startIndex: number,\n  endIndex: number\n): number => {\n  const mid = Math.floor((startIndex + endIndex) / 2);\n  const pivot = array[mid];\n\n  let low = startIndex;\n  let high = endIndex;\n\n  while (low <= high) {\n    while (array[low] < pivot) {\n      low++;\n    }\n\n    while (array[high] > pivot) {\n      high--;\n    }\n\n    sortHistory.push(\n      /* eslint-disable-next-line no-loop-func */\n      array.map((value, index) => ({\n        value,\n        selected: index === low,\n        comparator: index === high\n      }))\n    );\n\n    if (low <= high) {\n      swap(array, low, high);\n\n      low++;\n      high--;\n    }\n  }\n\n  return low;\n};\n\nconst quickSortInternal = (\n  array: number[],\n  sortHistory: SortHistory[][],\n  startIndex: number,\n  endIndex: number\n): void => {\n  if (array.length > 1) {\n    const index = partition(array, sortHistory, startIndex, endIndex);\n\n    if (startIndex < index - 1) {\n      quickSortInternal(array, sortHistory, startIndex, index - 1);\n    }\n\n    if (index < endIndex) {\n      quickSortInternal(array, sortHistory, index, endIndex);\n    }\n  }\n};\n\nexport const quickSort = (array: number[]): SortHistory[][] => {\n  const clone = [...array];\n  const sortHistory: SortHistory[][] = [];\n\n  quickSortInternal(clone, sortHistory, 0, clone.length - 1);\n\n  sortHistory.push(\n    clone.map((value, index) => ({\n      value,\n      selected: false,\n      comparator: false\n    }))\n  );\n\n  return sortHistory;\n};\n","import { SortHistory } from './index';\nimport { swap } from './swap';\n\nexport const selectionSort = (array: number[]): SortHistory[][] => {\n  const clone = [...array];\n  const sortHistory: SortHistory[][] = [];\n\n  for (let i = 0; i < clone.length - 1; i++) {\n    let min = i;\n\n    for (let j = i + 1; j < clone.length; j++) {\n      sortHistory.push(\n        /* eslint-disable-next-line no-loop-func */\n        clone.map((value, index) => ({\n          value,\n          selected: index === min,\n          comparator: index === j\n        }))\n      );\n\n      if (clone[j] < clone[min]) {\n        min = j;\n      }\n    }\n\n    sortHistory.push(\n      clone.map((value, index) => ({\n        value,\n        selected: index === i,\n        comparator: index === min\n      }))\n    );\n\n    swap(clone, i, min);\n  }\n\n  sortHistory.push(\n    clone.map((value, index) => ({\n      value,\n      selected: false,\n      comparator: false\n    }))\n  );\n\n  return sortHistory;\n};\n","import { SortHistory } from './index';\nimport { swap } from './swap';\n\nexport const insertionSortInterleaved = (\n  array: number[],\n  sortHistory: SortHistory[][],\n  startIndex: number,\n  gap: number\n): void => {\n  for (let i = startIndex + gap; i < array.length; i += gap) {\n    let j = i;\n\n    while (j - gap >= startIndex && array[j] < array[j - gap]) {\n      sortHistory.push(\n        /* eslint-disable-next-line no-loop-func */\n        array.map((value, index) => ({\n          value,\n          selected: index === j,\n          comparator: index === j - gap\n        }))\n      );\n\n      swap(array, j, j - gap);\n\n      j = j - gap;\n    }\n  }\n};\n\nexport const shellSort = (array: number[]): SortHistory[][] => {\n  const clone = [...array];\n  const sortHistory: SortHistory[][] = [];\n\n  for (let gap = clone.length; gap > 0; gap = Math.floor(gap / 2)) {\n    for (let i = 0; i < gap; i++) {\n      insertionSortInterleaved(clone, sortHistory, i, gap);\n    }\n  }\n\n  sortHistory.push(\n    clone.map((value, index) => ({\n      value,\n      selected: false,\n      comparator: false\n    }))\n  );\n\n  return sortHistory;\n};\n","import { bubbleSort } from './bubbleSort';\nimport { insertionSort } from './insertionSort';\nimport { quickSort } from './quickSort';\nimport { selectionSort } from './selectionSort';\nimport { shellSort } from './shellSort';\n\nexport type Algorithm =\n  | 'Bubble Sort'\n  | 'Insertion Sort'\n  | 'Quick Sort'\n  | 'Selection Sort'\n  | 'Shell Sort';\n\nexport interface SortHistory {\n  value: number;\n  selected?: boolean;\n  comparator?: boolean;\n}\n\nexport const ALGORITHM: Record<string, Algorithm> = {\n  BUBBLE_SORT: 'Bubble Sort',\n  INSERTION_SORT: 'Insertion Sort',\n  QUICK_SORT: 'Quick Sort',\n  SELECTION_SORT: 'Selection Sort',\n  SHELL_SORT: 'Shell Sort'\n};\n\nexport const getAlgorithm = (\n  algorithm: Algorithm\n): ((array: number[]) => SortHistory[][]) => {\n  const algorithms = {\n    [ALGORITHM.BUBBLE_SORT]: bubbleSort,\n    [ALGORITHM.INSERTION_SORT]: insertionSort,\n    [ALGORITHM.QUICK_SORT]: quickSort,\n    [ALGORITHM.SELECTION_SORT]: selectionSort,\n    [ALGORITHM.SHELL_SORT]: shellSort\n  };\n\n  return algorithms[algorithm];\n};\n","const randomInt = (min: number, max: number) =>\n  Math.floor(Math.random() * (max - min + 1) + min);\n\nexport const getRandomNumbers = (length: number) => {\n  return Array.from({ length }).map(() => randomInt(1, length));\n};\n","import React, { createContext, useCallback, useContext, useState } from 'react';\n\nimport { ALGORITHM, Algorithm, getAlgorithm, SortHistory } from 'algorithms';\nimport { delay } from 'utils/delay';\nimport { getRandomNumbers } from 'utils/getRandomNumbers';\n\ninterface Context {\n  algorithm: Algorithm;\n  arraySize: number;\n  sortSpeed: number;\n  sortHistory: SortHistory[];\n  sorted: boolean;\n  isSorting: boolean;\n  start: () => void;\n  pause: () => void;\n  shuffle: () => void;\n  setAlgorithm: (algorithm: Algorithm) => void;\n  setSize: (size: number) => void;\n  setSpeed: (speed: number) => void;\n}\n\nconst SortingContext = createContext<Context>({} as any);\n\ninterface Props {}\n\nexport const useSortingContext = () => useContext(SortingContext);\n\nexport const SortingProvider: React.FC<Props> = ({ children }) => {\n  const [sortingAlgorithm, setSortingAlgorithm] = useState<Algorithm>(\n    ALGORITHM.SELECTION_SORT\n  );\n  const [arraySize, setArraySize] = useState(50);\n  const [sortSpeed, setSortSpeed] = useState(100);\n  const [sortHistory, setSortHistory] = useState<SortHistory[]>(\n    getRandomNumbers(arraySize).map(value => ({ value }))\n  );\n  const [sortHistoryIndex, setSortHistoryIndex] = useState(0);\n  const [sorted, setSorted] = useState(false);\n  const [isSorting, setIsSorting] = useState(false);\n\n  const start = useCallback(() => {\n    setSorted(false);\n    setIsSorting(true);\n\n    const algorithm = getAlgorithm(sortingAlgorithm);\n    let history = algorithm(sortHistory.map(({ value }) => value));\n\n    if (sortHistoryIndex > 0) {\n      history = history.slice(sortHistoryIndex);\n    }\n\n    const runAlgorithm = (histories: SortHistory[], index: number) => {\n      setSortHistory(histories);\n      setSortHistoryIndex(sortHistoryIndex + index);\n\n      if (index === history.length - 1) {\n        // When sorting is complete reset the index of the sort history\n        setSortHistoryIndex(0);\n        setSorted(true);\n        setIsSorting(false);\n      }\n    };\n\n    history.forEach(delay(runAlgorithm, sortSpeed));\n  }, [sortingAlgorithm, sortHistory, sortHistoryIndex, sortSpeed]);\n\n  const pause = useCallback(() => {\n    setSorted(false);\n    setIsSorting(false);\n    // Timeout identifers in the browser are consecutive integers,\n    // so we can get a reference to the highest identifier and\n    // procedurally clear all timeouts\n    let timeoutId = setTimeout(() => {}, 0);\n\n    while (timeoutId--) {\n      clearTimeout(timeoutId);\n    }\n  }, []);\n\n  const shuffle = useCallback(() => {\n    pause();\n    setSorted(false);\n    setIsSorting(false);\n    setSortHistory(getRandomNumbers(arraySize).map(value => ({ value })));\n    setSortHistoryIndex(0);\n  }, [arraySize, pause]);\n\n  const setAlgorithm = useCallback((algorithm: Algorithm) => {\n    setSortingAlgorithm(algorithm);\n  }, []);\n\n  const setSize = useCallback(\n    (size: number) => {\n      setArraySize(size);\n      shuffle();\n    },\n    [shuffle]\n  );\n\n  const setSpeed = useCallback((speed: number) => {\n    setSortSpeed(speed);\n  }, []);\n\n  return (\n    <SortingContext.Provider\n      value={{\n        algorithm: sortingAlgorithm,\n        arraySize,\n        sortSpeed,\n        sortHistory,\n        sorted,\n        isSorting,\n        start,\n        pause,\n        shuffle,\n        setAlgorithm,\n        setSize,\n        setSpeed\n      }}\n    >\n      {children}\n    </SortingContext.Provider>\n  );\n};\n","export const delay = <T>(\n  fn: (item: T, index: number) => void,\n  delay: number\n) => {\n  return (x: T, i: number) => {\n    setTimeout(() => {\n      fn(x, i);\n    }, i * delay);\n  };\n};\n","import styled from 'styled-components';\n\nexport const StyledInputSlider = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const StyledInputSliderContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 5px;\n`;\n\nexport const StyledInputSliderLabel = styled.label`\n  font-size: 14px;\n  font-weight: 500;\n`;\n\nexport const StyledInputSliderValue = styled.p`\n  margin-left: 10px;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.4;\n`;\n\nexport const StyledInputSliderInput = styled.input`\n  margin: 0;\n\n  &::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 8.4px;\n    background: #fff;\n    border: 1px solid #bac7d5;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n\n  &::-moz-range-track {\n    width: 100%;\n    height: 8.4px;\n    background: #bac7d5;\n    border: 1px solid #bac7d5;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n\n  &::ms-track {\n    width: 100%;\n    height: 8.4px;\n    background: #bac7d5;\n    border: 1px solid #bac7d5;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n\n  &::-webkit-slider-thumb {\n    height: 20px;\n    width: 12px;\n    margin-top: -6px; /* You need to specify a margin in Chrome, but in Firefox and IE it is automatic */\n    border: 1px solid #bac7d5;\n    border-radius: 4px;\n    background: #fff;\n    cursor: pointer;\n    -webkit-appearance: none;\n  }\n\n  &::-moz-range-thumb {\n    height: 20px;\n    width: 12px;\n    background: #ffffff;\n    border: 1px solid #bac7d5;\n    border-radius: 4px;\n    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d;\n    cursor: pointer;\n  }\n\n  &::-ms-thumb {\n    height: 20px;\n    width: 12px;\n    background: #ffffff;\n    border: 1px solid #bac7d5;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport {\n  StyledInputSlider,\n  StyledInputSliderContainer,\n  StyledInputSliderInput,\n  StyledInputSliderLabel,\n  StyledInputSliderValue\n} from './styles';\n\ninterface Props {\n  id?: string;\n  label?: string;\n  min: number;\n  max: number;\n  value: number;\n  onChange?: (value: number) => void;\n}\n\nexport const InputSlider: React.FC<Props> = ({\n  id,\n  label,\n  min,\n  max,\n  value,\n  onChange = () => {}\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    const parsedValue = parseInt(value, 10);\n\n    onChange(parsedValue);\n  };\n\n  return (\n    <StyledInputSliderContainer>\n      <StyledInputSliderLabel htmlFor={id}>{label}</StyledInputSliderLabel>\n      <StyledInputSlider>\n        <StyledInputSliderInput\n          id={id}\n          type=\"range\"\n          min={min}\n          max={max}\n          value={value}\n          onChange={handleChange}\n        />\n        <StyledInputSliderValue>{value}</StyledInputSliderValue>\n      </StyledInputSlider>\n    </StyledInputSliderContainer>\n  );\n};\n","import styled from 'styled-components';\n\ninterface StyledSidebarProps {\n  open: boolean;\n}\n\nexport const StyledSidebar = styled.div<StyledSidebarProps>`\n  display: flex;\n  width: ${({ open }) => (open ? '275px' : '0px')};\n  flex-direction: column;\n  height: 100%;\n  margin-right: ${({ open }) => open && '10px'};\n  box-shadow: 0 -2px 2px #bac7d5;\n  opacity: ${({ open }) => (open ? '1' : '0')};\n  transition: all 0.3s ease-in-out;\n  border-right: 1px solid #bac7d5;\n\n  > * {\n    transition: all 0.3s ease-in-out;\n    opacity: ${({ open }) => (open ? '1' : '0')};\n  }\n`;\n\nexport const StyledSidebarSection = styled.div``;\n","import React from 'react';\n\nimport { StyledSidebar } from './styles';\n\ninterface Props {\n  open: boolean;\n}\n\nexport const Sidebar: React.FC<Props> = ({ open, children }) => {\n  return <StyledSidebar open={open}>{children}</StyledSidebar>;\n};\n","import styled from 'styled-components';\n\nexport const StyledSelect = styled.select`\n  display: block;\n  box-sizing: border-box;\n  flex: 1 0 auto;\n  margin: 0;\n  padding: 5px;\n  background-color: #fff;\n  background-repeat: no-repeat, repeat;\n  background-position: right 0.7em top 50%, 0 0;\n  background-size: 0.65em auto, 100%;\n  background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E'),\n    linear-gradient(to bottom, #ffffff 0%, #e5e5e5 100%);\n  font-size: 12px;\n  font-weight: 400;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  box-shadow: 0 1px 0 1px rgba(0, 0, 0, 0.04);\n  appearance: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n`;\n\nexport const StyledSelectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 5px;\n`;\n\nexport const StyledSelectLabel = styled.label`\n  margin-bottom: 5px;\n  font-size: 14px;\n  font-weight: 500;\n`;\n","import React from 'react';\n\nimport {\n  StyledSelect,\n  StyledSelectContainer,\n  StyledSelectLabel\n} from './styles';\n\ninterface Props {\n  id?: string;\n  label?: string;\n  value: string;\n  onChange?: (value: string) => void;\n}\n\nexport const Select: React.FC<Props> = ({\n  id,\n  label,\n  value,\n  onChange = () => {},\n  children\n}) => {\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n    onChange(value);\n  };\n\n  return (\n    <StyledSelectContainer>\n      {label && <StyledSelectLabel htmlFor={id}>{label}</StyledSelectLabel>}\n      <StyledSelect id={id} value={value} onChange={handleChange}>\n        {children}\n      </StyledSelect>\n    </StyledSelectContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  box-sizing: border-box;\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px 16px;\n  background: transparent;\n  border-radius: 4px;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.4;\n  transition: all 0.15s ease-in-out;\n  appearance: none;\n\n  &:hover {\n    background: #e5eaef;\n    color: #333;\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const StyledSortingToolbar = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: 1fr;\n  grid-template-areas: 'toolbar-left toolbar-center toolbar-right';\n  justify-items: center;\n  align-items: center;\n  min-height: 54px;\n  background: #f5f5f5;\n  border-bottom: 1px solid #bac7d5;\n  box-shadow: 0 2px 1px -1px #bac7d5;\n  z-index: 1;\n`;\n\nexport const StyledSortingToolbarCenter = styled.div`\n  grid-area: toolbar-center;\n`;\n\nexport const StyledSortingToolbarLeft = styled.div`\n  grid-area: toolbar-left;\n  justify-self: flex-start;\n  margin-left: 10px;\n`;\n\nexport const StyledSortingToolbarRight = styled.div`\n  grid-area: toolbar-right;\n  justify-self: flex-end;\n  margin-right: 10px;\n`;\n\nexport const StyledSortingToolbarTitle = styled.h1`\n  font-size: 18px;\n  font-weight: 500;\n  margin-right: 20px;\n`;\n","import React from 'react';\n\nimport { Button } from '../Button';\nimport { useSortingContext } from '../SortingProvider';\nimport {\n  StyledSortingToolbar,\n  StyledSortingToolbarCenter,\n  StyledSortingToolbarLeft,\n  StyledSortingToolbarRight,\n  StyledSortingToolbarTitle\n} from './styles';\n\ninterface Props {\n  sidebarOpen: boolean;\n  toggleSidebar: () => void;\n}\n\nexport const SortingToolbar: React.FC<Props> = ({\n  sidebarOpen,\n  toggleSidebar\n}) => {\n  const { algorithm, isSorting, start, pause, shuffle } = useSortingContext();\n\n  const handleStart = () => {\n    if (sidebarOpen) toggleSidebar();\n    start();\n  };\n\n  return (\n    <StyledSortingToolbar>\n      <StyledSortingToolbarLeft>\n        <StyledSortingToolbarTitle>{algorithm}</StyledSortingToolbarTitle>\n      </StyledSortingToolbarLeft>\n\n      <StyledSortingToolbarCenter>\n        {isSorting ? (\n          <Button onClick={pause}>Pause</Button>\n        ) : (\n          <Button onClick={handleStart}>Start</Button>\n        )}\n        <Button onClick={shuffle}>Reset</Button>\n      </StyledSortingToolbarCenter>\n\n      <StyledSortingToolbarRight>\n        <Button onClick={toggleSidebar}>Options</Button>\n      </StyledSortingToolbarRight>\n    </StyledSortingToolbar>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledSortingVisualiser = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\ninterface StyledSortingContainerProps {\n  sidebarOpen: boolean;\n}\n\nexport const StyledSortingContainer = styled.div<StyledSortingContainerProps>`\n  position: relative;\n  display: flex;\n  flex: 1 1 auto;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding: ${({ sidebarOpen }) => (sidebarOpen ? '0 10px 0 0' : '0 10px')};\n  background: #f5f5f5;\n`;\n\ninterface StyledBarProps {\n  height: number;\n  comparator?: boolean;\n  selected?: boolean;\n  sorted?: boolean;\n}\n\nexport const StyledBar = styled.div<StyledBarProps>`\n  flex: 1;\n  height: ${({ height }) => height}%;\n  margin-right: 2px;\n  background: ${({ comparator, selected, sorted }) =>\n    sorted\n      ? '#28a138'\n      : selected\n      ? '#b91919'\n      : comparator\n      ? '#0172cb'\n      : '#b19cd9'};\n\n  &:last-child {\n    margin: 0;\n  }\n`;\n","import React, { useCallback, useState } from 'react';\n\nimport { InputSlider } from '../InputSlider';\nimport { Sidebar } from '../Sidebar';\nimport { Select } from '../Select';\nimport { useSortingContext } from '../SortingProvider';\nimport { SortingToolbar } from '../SortingToolbar';\nimport {\n  StyledBar,\n  StyledSortingContainer,\n  StyledSortingVisualiser\n} from './styles';\nimport { ALGORITHM, Algorithm } from 'algorithms';\n\ninterface Props {}\n\nexport const SortingVisualiser: React.FC<Props> = () => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const {\n    algorithm,\n    arraySize,\n    isSorting,\n    sortHistory,\n    sorted,\n    sortSpeed,\n    setAlgorithm,\n    setSize,\n    setSpeed\n  } = useSortingContext();\n\n  const handleToggleSidebar = useCallback(() => {\n    setSidebarOpen(open => !open);\n  }, []);\n\n  return (\n    <StyledSortingVisualiser>\n      <SortingToolbar\n        sidebarOpen={sidebarOpen}\n        toggleSidebar={handleToggleSidebar}\n      />\n\n      <StyledSortingContainer sidebarOpen={sidebarOpen}>\n        <Sidebar open={sidebarOpen}>\n          <Select\n            id=\"Algorithm Select\"\n            label=\"Algorithm\"\n            value={algorithm}\n            onChange={value => setAlgorithm(value as Algorithm)}\n          >\n            {Object.values(ALGORITHM).map(value => (\n              <option value={value}>{value}</option>\n            ))}\n          </Select>\n\n          {!isSorting && (\n            <InputSlider\n              id=\"Array Size Slider\"\n              label=\"Array Size\"\n              min={10}\n              max={100}\n              value={arraySize}\n              onChange={value => setSize(value)}\n            />\n          )}\n\n          {!isSorting && (\n            <InputSlider\n              id=\"Sort Delay Slider\"\n              label=\"Sort Delay\"\n              min={50}\n              max={1000}\n              value={sortSpeed}\n              onChange={setSpeed}\n            />\n          )}\n        </Sidebar>\n\n        {sortHistory.map(({ value, comparator, selected }, index) => (\n          <StyledBar\n            key={index}\n            height={(value / sortHistory.length) * 90}\n            comparator={comparator}\n            selected={selected}\n            sorted={sorted}\n          />\n        ))}\n      </StyledSortingContainer>\n    </StyledSortingVisualiser>\n  );\n};\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport { CssReset } from './components/CssReset';\nimport { SortingProvider } from './components/SortingProvider';\nimport { SortingVisualiser } from './components/SortingVisualiser';\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <CssReset />\n      <SortingProvider>\n        <SortingVisualiser />\n      </SortingProvider>\n    </React.Fragment>\n  );\n};\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}